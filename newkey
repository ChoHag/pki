#!/bin/bash

set -e

usage() {
  e=$1
  echo "Usage:"
  echo "  $(basename $0) [-h|--help]"
  echo "    This help"
  echo "  $(basename $0) [-p <pkidir>] [(-e|-E) [-a <algorithm>]] [-b <bits>] <key-name>"
  echo "    Create a key with a signing request for CA"
  echo "    -p: Base directory for PKI data"
  echo "    -e: Encrypt the private key"
  echo "    -E: As above but include the unencrypted and expanded forms"
  echo "    -a: Encryption algorithm to use (default des3)"
  echo "    -b: Key size. No default except openssl's 512."
  if [ "$e" ]; then exit $e; fi
}

unset pkidir bits
encrypt=0
algorithm=des3

if [ "$1" = "--help" ]; then usage 0; fi
while getopts "hp:eEa:b:" arg; do
  case $arg in
    h) usage 0 ;;
    p) pkidir=$OPTARG ;;
    e) encrypt=-1 ;;
    E) encrypt=1 ;;
    a) algorithm=$OPTARG ;;
    b) bits=$OPTARG ;;
    ?) usage 1 ;;
  esac
done
shift $(expr $OPTIND - 1)
name="$1"

cd ${pkidir:-${PKIDIR:?No PKI working directory}}
if ! tmp=$(mktemp --tmpdir=tmp -d); then
  echo Cannot create temporary directory. >&2
  exit 2
fi
trap "rm -fr $tmp" EXIT

umask 377
openssl genrsa -out "$tmp"/key $bits
if (( $encrypt >= 0 )); then
  openssl rsa -in "$tmp"/key -text -out keys/"${name//\//_}"
  if (( $encrypt )); then
    openssl rsa -in "$tmp"/key -$algorithm -out keys/encrypted-"${name//\//_}"
    chmod u+w keys/"${name//\//_}"
    cat keys/encrypted-"${name//\//_}" >> keys/"${name//\//_}"
    chmod u-w keys/"${name//\//_}"
  fi
else
  openssl rsa -in "$tmp"/key -$algorithm -out keys/"${name//\//_}"
fi
