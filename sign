#!/bin/sh

set -e

usage() {
  e=$1
  echo "Usage:"
  echo "  $(basename $0) [-h|--help]"
  echo "    This help"
  echo "  $(basename $0) [-B] [-p <pkidir>] [-x <extensions>] [-P <policy>]"
  echo "      (-s | -c <ca>) [-k <keyfile>] <request-name>"
  echo "    Sign request as CA (-c) or self-sign (-s)"
  echo "    -B: Batch mode (Do it - don't ask questions)"
  echo "    -c: Certificate Authority"
  echo "    -k: Alternate key file"
  echo "    -p: Base directory for PKI data"
  echo "    -P: Section of config file defining certificate policy"
  echo "    -s: Sign the CSR with the key that generated it (self-signed certificate)"
  echo "    -x: Section of config file with extensions to apply to certificate"
  if [ "$e" ]; then exit $e; fi
}

unset pkidir name
unset batch ca keyfile policy selfsign extensions

if [ "$1" = "--help" ]; then usage 0; fi
while getopts "hBc:k:p:P:sx:" arg; do
  case $arg in
    h) usage 0 ;;
    B) batch=-batch ;;
    c) export ca=$(echo "$OPTARG" | tr '\000/' _) ;;
    k) keyfile=$OPTARG ;;
    p) pkidir=$OPTARG ;;
    P) policy=$OPTARG ;;
    s) selfsign=-selfsign ;;
    x) extensions=$OPTARG ;;
    ?) usage 1 ;;
  esac
done
shift $(expr $OPTIND - 1)
name=$1
# No / or NUL characters to protect the filesystem. If you screw up the
# config file that's your lookout.
fs_name=$(echo "$name" | tr '\000/' _)

cd "${pkidir:=${PKIDIR:?No PKI working directory}}"
export TMPDIR="$pkidir/tmp"

if [ -n "$selfsign" ]; then
  export ca=$fs_name
fi

# Use TMPDIR to ensure only non-volatile temporary storage is used if possible.
if ! tmp=$(mktemp -t -d); then
  echo "Cannot create temporary directory." >&2
  exit 2
fi
trap "rm -fr $tmp" EXIT

openssl ca -config pki.conf $selfsign ${keyfile:+-keyfile "$keyfile"}   \
    -in requests/"$fs_name" -out "$tmp"/certificate                     \
    ${extensions:+-extensions $extensions} ${policy:+-policy $policy}   \
    ${batch}
mv "$tmp"/certificate certificates/"$fs_name"
